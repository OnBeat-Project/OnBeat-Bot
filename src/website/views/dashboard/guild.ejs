<%-include("../include/head.ejs", {
  title: "OnBeat - Music Guild Dashboard",
  description: "Music guild dashboard."
})%>
<%-include("../include/nav.ejs")%>

<%if (req.user) {
  %>
  <%req.user.guilds.forEach(g => {
    if (g.id === guild.id) {
      %>

      <form id="requestMusic" class="fixed z-[1] bottom-0 flex w-full justify-center mb-3" action="https://api.onbeat.me/api/guild/<%=guild.id%>/track/add" method="post">
        <input name="music" id="music" class="text-slate-900 text-center p-1 drop-shadow rounded-xl w-96" placeholder="<%=req.t("logged.guild.search", { ns: "dashboard", server_name: guild.name })%>" autocomplete="off"></input>
      </form>
      <div id="show" x-data="{show: 'loading'}">
        <div x-show="show=='noVC'" x-transition.duration.500ms>
          <div class="flex flex-col justify-center items-center w-full h-[80vh]">
            <img src="/images/gifs/noVoiceChannel.gif" class="w-48 md:w-96 hidden dark:block" id="darkMode"/>
            <img src="/images/gifs/noVoiceChannelLight.gif" class="w-48 md:w-96 block dark:hidden" id="lightMode"/>
            <p id="voiceWarning">Join in a voice channel!</p>
          </div>
        </div>
        <div class="flex flex-col justify-center justify-items-center items-center content-center text-center w-full h-[80vh] overflow-hidden" x-show="show === 'noTrack'" id="stopped" x-transition.duration.500ms>
          <!--<img src="" id="img-error" class="w-64"/>-->
          <p class="text-2xl">
            <%=req.t("logged.guild.overview.track.noMusic", {
              ns: "dashboard"
            })%>
          </p>
        </div>
        <div id="loading" class="flex justify-center items-center text-center w-full overflow-hidden h-[80vh]" x-show="show==='loading'" x-transition.duration.500ms>
          <div role="status">
            <svg aria-hidden="true" class="mr-2 w-8 h-8 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor" />
              <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill" />
            </svg>
            <span class="sr-only">Loading...</span>
          </div>
        </div>
        <div id="queue" class="w-full overflow-hidden" x-show="show==='withTrack'" x-data="{ tab: 'track' }" x-transition:enter.delay.500ms.duration.500ms>
          <nav class="fixed z-[3] top-16 bg-white/70 dark:bg-gray-900/70 mb-4 border-b border-gray-200 dark:border-gray-700 w-full backdrop-blur-lg" x-show="show==='withTrack'" x-transition.opacity.delay.1s.duration.500ms>
            <ul class="flex flex-wrap -mb-px text-sm font-medium text-center">
              <li class="w-1/2"><button class="inline-block p-4 rounded-t-lg border-b-2 border-transparent transition-all w-full" x-on:click="tab = 'track'" x-bind:class="{'text-blue-700 border-blue-700 dark:border-blue-300 dark:text-blue-300':tab==='track'}" x-transition><%=req.t("logged.guild.overview.tabName", {
                ns: "dashboard", server_name: guild.name
              })%></button></li>
              <li class="w-1/2"><button class="inline-block p-4 rounded-t-lg border-b-2 border-transparent transition-all w-full" x-on:click="tab = 'queue'" x-bind:class="{'text-blue-700 border-blue-700 dark:border-blue-300 dark:text-blue-300':tab==='queue'}" x-transition><%=req.t("logged.guild.queue.tabName", {
                ns: "dashboard"
              })%><span class="ml-2 bg-blue-500/50 p-1 rounded-full">Beta</span></button></li>
              <li class="hidden w-1/3"><button class="inline-block p-4 rounded-t-lg border-b-2 border-transparent transition-all w-full" x-on:click="tab = 'suggestion'" x-bind:class="{'text-blue-700 border-blue-700 dark:border-blue-300 dark:text-blue-300':tab==='suggestion'}">Suggestions</button></li>
            </ul>
          </nav>
          <!--<div class="m-16"></div>--->
          <div id="queueList" class="m-12" x-show="tab === 'queue'" x-transition:enter.delay.500ms.duration.500ms
            x-transition:leave>
            <div id="queueNone" class="flex justify-center items-center text-center w-full h-[80vh]">
              <p>
                <%=req.t("logged.guild.queue.noMusic", {
                  ns: "dashboard", server_name: guild.name
                })%>
              </p>
            </div>
            <ul class="" id="queueMusic0"></ul>
          </div>
          <div id="track" class="flex flex-col items-center justify-center h-[80vh] w-full transition-all" x-show="tab === 'track'"
            x-transition:enter.delay.500ms.duration.500ms
            x-transition:leave
            >

            <img class="rounded-2xl flex justify-center items-center text-center w-48 p-2" src="https://api.onbeat.me/images/favicon.ico" id="track-image"></img>
            <p class="" id="track-name">
              Null
            </p>
            <p class="text-gray-600 dark:text-gray-400" id="track-artist">
              Null
            </p>
            <p class="" id="errorMessage">

            </p>
            <div class="player">
              <div class="text-slate-900 dark:text-slate-100">
                <!--<p id="time">
                                                                                                                                      0:00
                                                                                                                                    </p>--->
              </div>
              <div id="player-buttons" class="flex gap-x-2 mt-3 flex dark:text-white text-center">
                <button id="clear">
                  <i data-feather="x-octagon"></i>
                </button>
                <button id="play">
                  <i id="icon" data-feather="pause"></i>
                </button>
                <button id="skip">
                  <i data-feather="skip-forward"></i>
                </button>
                <button id="shuffle">
                  <i data-feather="shuffle"></i>
                </button>
              </div>
            </div>
          </div>
          <div class="fixed w-full top-0 bg-zinc-700 rounded-full h-4 dark:bg-zinc-200" x-show="show==='withTrack'" x-transition.delay.1s.duration.500ms>
            <div class="bg-rose-700 dark:bg-fuchsia-400 h-4 rounded-full" id="time-progress" style="width: 0%"></div>
          </div>
          <div id="suggestion" class="flex flex-col mt-12 justify-center w-full text-center transition-all" x-show="tab === 'suggestion'"
            x-transition
            >

          </div>
        </div>
      </div>
      <div id="toast-data" x-data="{toast:false}">
        <div id="toast-music" class="fixed z-[4] flex justify-center items-center top-0 m-2 bg-gray-100 text-black dark:bg-gray-700 dark:text-white text-center transition-all duration-500 p-2 rounded-2xl" x-show="toast" x-transition>
          <p id="toast-music-text">

          </p>
        </div>
      </div>
      <script>
        const url = "https://onbeat.me"
        const music = {
          img: document.getElementById("track-image"),
          title: document.getElementById("track-name"),
          artist: document.getElementById("track-artist"),
          time: document.getElementById("time"),
          progress: document.getElementById("time-progress"),
          user: document.getElementById("track-userRequest"),
        }
        const request = document.getElementById("requestMusic");
        const query = document.getElementById("music");
        const notrack = document.getElementById("stopped");
        const trackEl = document.getElementById("queue");
        $(function() {
          $("#requestMusic").submit((e) => {
            e.preventDefault()
            $.post(`${url}/api/guild/<%=guild.id%>/track/add?user=<%=req.user.id%>&query=${query.value}`, {}, function(data, status) {
              // document.getElementById("show")._x_dataStack[0].show = "loading"

              if (data.errCode === 1) {
                $("#toast-data #toast-music #toast-music-text").html("Join in a voice channel!")
                document.getElementById("toast-data")._x_dataStack[0].toast = true;
                setTimeout(() => {
                  document.getElementById("toast-data")._x_dataStack[0].toast = false;
                }, 3000);
              }
              console.log(data);
              console.log(status);
            });
            query.value = ""
            // return false;
          })
        })

        $('#skip').click(function() {
          $.post(`${url}/api/guild/<%=guild.id%>/track/skip?user=<%=req.user.id%>`, {}, function(data,
            status) {
            if (data.errCode === 1) {
              $("#toast-data #toast-music #toast-music-text").html("Join in a voice channel!")
              document.getElementById("toast-data")._x_dataStack[0].toast = true;
              setTimeout(() => {
                document.getElementById("toast-data")._x_dataStack[0].toast = false;
              }, 3000);
            }
            document.getElementById("queue")._x_dataStack[0].tab = ""
            setTimeout(() => {
              document.getElementById("queue")._x_dataStack[0].tab = "track"
            },
              2000)

            console.log(data);
            console.log(status);
          });
        });
        $('#clear').click(function() {
          $.post(`${url}/api/guild/<%=guild.id%>/queue/clear?user=<%=req.user.id%>`,
            {},
            function(data,
              status) {
              if (data.errCode === 1) {
                $("#toast-data #toast-music #toast-music-text").html("Join in a voice channel!")
                document.getElementById("toast-data")._x_dataStack[0].toast = true;
                setTimeout(() => {
                  document.getElementById("toast-data")._x_dataStack[0].toast = false;
                }, 3000);
              }
              document.getElementById("queue")._x_dataStack[0].tab = ""
              setTimeout(() => {
                document.getElementById("queue")._x_dataStack[0].tab = "track"
              },
                2000)

              console.log(data);
              console.log(status);
            });
        });
        $('#play').click(function() {
          $.post(`${url}/api/guild/<%=guild.id%>/track/pause?user=<%=req.user.id%>`,
            {},
            function(data, status) {
              if (data.errCode === 1) {
                $("#toast-data #toast-music #toast-music-text").html("Join in a voice channel!")
                document.getElementById("toast-data")._x_dataStack[0].toast = true;
                setTimeout(() => {
                  document.getElementById("toast-data")._x_dataStack[0].toast = false;
                }, 3000);
              }
              console.log(data);
              console.log(status);
            });
        });
        $('#shuffle').click(function() {
          $.post(`${url}/api/guild/<%=guild.id%>/queue/shuffle?user=<%=req.user.id%>`,
            {},
            function(data, status) {
              if (data.errCode === 1) {
                $("#toast-data #toast-music #toast-music-text").html("Join in a voice channel!")
                document.getElementById("toast-data")._x_dataStack[0].toast = true;
                setTimeout(() => {
                  document.getElementById("toast-data")._x_dataStack[0].toast = false;
                }, 3000);
              }
              document.getElementById("queue")._x_dataStack[0].tab = ""
              setTimeout(() => {
                document.getElementById("queue")._x_dataStack[0].tab = "queue"
              }, 2000)
              console.log(data);
              console.log(status);
            });
        });

        setInterval(() => {
          $(function() {
            $.get(`${url}/api/guild/<%=guild.id%>/queue`, function(data, status) {
              if(!data.memberVoiceChannel) { 
                $("#voiceWarning").html("Join in a voice channel")
                return document.getElementById("show")._x_dataStack[0].show = "noVC"; 
              } else if(data.botVoiceChannel && data.memberVoiceChannel.id !== data.botVoiceChannel.id) {
                $("#voiceWarning").html("Join the same voice channel as mine!")
                return document.getElementById("show")._x_dataStack[0].show = "noVC"; 
              }
              if (!data.playing) {
                if (data.tracks[0]) {
                  document.getElementById("show")._x_dataStack[0].show = "loading"
                } else {
                  document.getElementById("show")._x_dataStack[0].show = "noTrack"
                }
                return;
              } else {
                document.getElementById("show")._x_dataStack[0].show = "withTrack"
                music.img.src = data.track.thumbnail;
                music.title.textContent = data.track.title;
                music.artist.textContent = data.track.author;


                const tracksmap = data.tracks.map((track, i) => {
                  var trackName = data.tracks[i]?data.tracks[i].title: {}
                  if (trackName && trackName.length > 43) trackName = trackName.slice(0, 43) + "..."

                  return `<li id="li" class="cursor-pointer" x-transition><div id="queueTrack-${i}" class="flex gap-x-2 items-center"><span class="ml-2 bg-blue-500/50 p-1 pl-3 pr-3 rounded-full">${i+1}</span><img src="${track.thumbnail?track.thumbnail: ""}" class="rounded-xl drop-shadow w-32"/> <div class="flex-row"><p id="musicName" class="text-lg">${trackName}</p> <span class="text-sm text-slate-800 dark:text-slate-300">${data.tracks[i]?data.tracks[i].author: ""}</span></div></div></li><br>`;
                })
                $("#queueMusic0").html(tracksmap)
                if (!data.paused) {
                  $("#icon").html(feather.icons["pause"].toSvg())
                } else {
                  $("#icon").html(feather.icons["play"].toSvg())
                }
                data.tracks.map((track, i) => {
                  if (!data.tracks) {
                    document.getElementById("queueNone").classList.remove("hidden")
                  } else {
                    document.getElementById("queueNone").classList.add("hidden")
                  }
                  console.log(i)

                  $(`#queueTrack-${i}`).click(function() {
                    location.href = "#";
                    document.getElementById("queue")._x_dataStack[0].tab = "track"
                    console.log(e)
                    $.post(`${url}/api/guild/<%=guild.id%>/queue/skip/${i}?user=<%=req.user.id%>`, {}, function(data, status) {
                      console.log(data);
                      console.log(status);
                    });
                  })
                })
              }
              // music.time.textContent = `${info.perc.current}`
            })
            $.get(`${url}/api/guild/<%=guild.id%>/queue/progress`, function(data,
              status) {
              if (data.progress > 100) {
                music.progress.style.width = `100%`;
              } else {
                music.progress.style.width = `${data.progress}%`
              }
            })
          })
          $("#myInput").on("keyup", function() {
            setInterval(() => {
              var value = $(this).val().toLowerCase();
              $("#queueMusic0 #li").filter(function() {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
              })
            });
          });
        }, 1000);


      </script>
      <%
    } else return;
  })%>
  <%} else {%>
    <div class="flex flex-col w-full h-[95vh] justify-center items-center">
      <p>
        Please login with one of these platforms to continue:
      </p>
      <br>
      <a href="/auth/login" class="text-center flex items-center justify-center gap-x-2  bg-blue-900 text-white dark:bg-blue-100 dark:text-black p-2 rounded-xl mb-3 w-32"><i class="fa-brands fa-discord"></i>Discord</a>
    </div>
    <%}%>
      <%-include('../include/footer.ejs')%>