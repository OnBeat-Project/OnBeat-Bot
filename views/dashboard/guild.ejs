<%-include("../include/head.ejs", {
  title: "OnBeat - Music Guild Dashboard",
  description: "Dashboard :0"
})%>
<%-include("../include/nav.ejs")%>
<%if (!channeldb) {%>
<div class="p-1 flex justify-center items-center gap-x-1 h-full w-full">
  <p>Please, set a log channel</p>
</div>
<%} else {%>

<div class="p-1 flex justify-center gap-x-1 w-full">
  <form id="requestMusic" class="fixed">
    <input name="music" class="text-slate-900 text-center p-1 m-3 drop-shadow rounded-xl" id="music" placeholder="Search a music for <%=guild.name%>"></input>
  </form>
</div>
<div class="flex flex-col justify-center justify-items-center items-center content-center text-center w-full h-[100vh]" id="stopped">
  Nothing playing...
</div>
<div id="track" class="hidden flex flex-col justify-center justify-items-center items-center content-center text-center w-full h-[100vh]">
  <img class="w-64 rounded-2xl drop-shadow-lg" id="track-image" src="" />
  <br>
<p class="text-xl" id="track-name">
  null
</p>
<br>
<p class="text-lg text-slate-700 dark:text-slate-300" id="track-artist">
  null
</p>
<p id="time">
  00:00/00:00
</p>
<div class="w-96 bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">
  <div class="bg-purple-600 h-2.5 rounded-full" id="time-progress" style="width: 0%"></div>
</div>
<br>
<div class="fixed inset-x-0 flex bottom-0 bg-slate-200 dark:text-slate-100 dark:bg-slate-600 w-full h-16 dark:text-slate-900 items-center justify-between text-center rounded-t-xl" id="player">
  <div id="users" class="flex ml-1 -space-x-4" data-tooltip-target="tooltip-top" data-tooltip-placement="top" type="button">
    <img src="" alt="user-1" class="w-10 h-10 border-2 border-slate-200 rounded-full dark:border-slate-600" id="user1" />
  <img src="" alt="user-2" class="w-10 h-10 border-2 border-slate-200 rounded-full dark:border-slate-600" id="user2" />
  <a class="hidden flex items-center justify-center w-10 h-10 text-xs font-medium text-white bg-gray-700 border-2 border-slate-200 rounded-full hover:bg-gray-600 dark:border-slate-600" id="otherusers">+0</a>
</div>
<div id="player-buttons" class="flex dark:text-white text-center">
<button onclick="pause(this)" id="play">
<i id="icon" data-feather="pause"></i>
</button>
<button onclick="skip(this)" id="skip">
<i data-feather="skip-forward"></i>
</button>
</div>
<div class="w-16"></div>
</div>
</div>
<div id="tooltip-top" role="tooltip" class="inline-block absolute invisible z-10 py-2 px-3 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 tooltip dark:bg-gray-700">
    <div id="connected-users" class="flex ml-1 -space-x-4">
      
    </div>
    <div class="tooltip-arrow" data-popper-arrow></div>
</div>

<script>
var room = io.connect()
socket.emit("create", "<%=guild.id%>")

const form = document.getElementById("requestMusic")
const search = document.getElementById("music");
this.click = 0
form.onsubmit = (e) => {
this.click += 1
if (this.click === 1) {
alert("This feature stills in beta!")
}
socket.emit("musicRequest", {
guild: "<%=guild.id%>", music: search.value, user: "<%=req.user.id%>"
});
search.value = ""
e.preventDefault();
search.disabled = true;
return false;
}
socket.on("connect", (connected) => {
console.log(connected)
});

socket.on("musicQueue", (music) => {
console.log(music)
this.queueNotify += 1;
// if(this.queueNotify > 1) {  return this.queueNotify=0; } else { return UIkit.notification(`Song ${music.track.title} has been queued!`) }

})
socket.on("queueEnd", music => {
UIkit.notification("Queue ends!");
});

const queue = document.getElementById("queue");
const notrack = document.getElementById("stopped");
const trackEl = document.getElementById("track");
const music = {
img: document.getElementById("track-image"),
title: document.getElementById("track-name"),
artist: document.getElementById("track-artist"),
time: document.getElementById("time"),
progress: document.getElementById("time-progress")
}
this.paused = false;
socket.on("currentMusic", (info) => {
// console.log(info)
if (!info.queue) { notrack.classList.remove("hidden"); trackEl.classList.add("hidden"); }
notrack.classList.add("hidden");
trackEl.classList.remove("hidden");
music.img.src = info.info.image;
music.title.textContent = info.info.title;
music.artist.textContent = info.info.artist;
music.time.textContent = `${info.perc.current}/${info.perc.end}`;
music.progress.style.width = `${info.perc.progress}%`

const seenUsers = info.members.slice(0, 3)

info.members.forEach((i)=> {
  document.getElementById("connected-users").innerHTML += `<img src="${i.displayAvatarURL}" class="w-10 h-10 border-2 border-slate-200 rounded-full dark:border-slate-600"/>`
})

const avatar1 = document.getElementById("user1")
const avatar2 = document.getElementById("user2")

avatar1.src=info.members[0].displayAvatarURL;
if(info.members[1]) {
  avatar2.classList.remove("hidden")
  avatar2.src=info.members[1].displayAvatarURL;
} else {
  avatar2.src="";
  avatar2.classList.add("hidden")
}

const extraUsers = info.members.length - 2
if (extraUsers > 0) {
  document.getElementById("otherusers").classList.remove("hidden")
  document.getElementById("otherusers").textContent = "+" + extraUsers;
} else {
  document.getElementById("otherusers").classList.add("hidden")
  document.getElementById("otherusers").textContent = "+0";
}

search.disabled = false;

})

// const play = document.querySelectorAll("#play");

function pause(play) {
//  console.log(e)
// e.preventDefault();
if (this.paused === false) {
this.paused = true
} else {
this.paused = false
};
socket.emit("pauseTrack", {
guild: "<%=guild.id%>", user: "<%=req.user.id%>", paused: this.paused
});
const pauseBtn = document.getElementById("icon")
socket.on("trackUpdate", (update) => {
console.log(update)
if(update.pause === true) {
  pauseBtn.innerHTML = feather.icons["play"].toSvg()
} else {
  pauseBtn.innerHTML = feather.icons["pause"].toSvg()
}
})
}
function skip(music) {
socket.emit("skipTrack", {
guild: "<%=guild.id%>", user: "<%=req.user.id%>"
});
}
/*socket.on("musicQueue", (info) => {
      console.log(info)
    const tracks = info.queue.tracks.slice(0, 10);
    queue.innerHTML += `<p>${tracks.title}</p><br>`
    });*/
twemoji.parse(document.body);
</script>
<%}%>
<script src="https://twemoji.maxcdn.com/v/latest/twemoji.min.js" crossorigin="anonymous"></script>
<%-include('../include/footer.ejs')%>